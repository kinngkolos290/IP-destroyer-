import socket
GREEN = "\033[92m"
RED = "\033[91m"
CYAN = "\033[96m"
GREEN = "\033[92m"
WHITE = "\033[93m"

# Simple ASCII banner
banner = """===========================================
||  тХФтХРтХЧтХФтХРтХЧтХФтХЧтХФтХФтХжтХЧтХФтХРтХЧтХФтХРтХЧтХФтХжтХЧтХжтХФтХЧтХФтХФтХРтХЧ  ||
||  тХатХРтХЭтХСтХг тХСтХСтХС тХС тХСтХг тХЪтХРтХЧ тХС тХСтХСтХСтХСтХС тХж  ||
||  тХй  тХЪтХРтХЭтХЭтХЪтХЭ тХй тХЪтХРтХЭтХЪтХРтХЭ тХй тХйтХЭтХЪтХЭтХЪтХРтХЭ  ||
===========================================
"""

# Affichage de la banni├иre
print(f"{RED}{banner}")

# Texte suppl├йmentaire
print(f"""{CYAN}CODE BY : EMPEROR DESTRUCTOR ЁЯОн
SC : PENTESTING FOR SCAN WEB
USE LIKE : TESTER OF SECURITYуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕдуЕд""")

def scanner_port(ip, port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(10)
    result = sock.connect_ex((ip, port))
    
    if result == 0:
        print(f"{CYAN}Port {port} est ouvert sur {ip}")
    else:
        print(f"{RED}Port {port} est ferm├й sur {ip}")
    sock.close()

def scanner_ports(ip, ports):
    print(f"{GREEN}Scanner les port sur {ip}...")
    for port in ports:
        scanner_port(ip, port)

ip = input(f"{WHITE}Entrez l'adresse IP ├а scanner :\nEx :")
ports = [22, 80, 443, 8080]

scanner_ports(ip, ports)
